apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'


android {

  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion
  defaultConfig {
    applicationId "com.barin.circleciexample"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode rootProject.ext.versionCode
    versionName rootProject.ext.versionName
    testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    vectorDrawables.useSupportLibrary = true
    multiDexEnabled true
  }


  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }


  packagingOptions {
    exclude 'META-INF/DEPENDENCIES.txt'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/notice.txt'
    exclude 'META-INF/license.txt'
    exclude 'META-INF/dependencies.txt'
    exclude 'META-INF/LGPL2.1'
    exclude 'META-INF/rxjava.properties'
  }



  lintOptions {
    quiet true // If set to true, turns off analysis progress reporting by lint.
    abortOnError false
    checkReleaseBuilds false
    lintConfig file("${project.rootDir}/lint.xml")
    htmlOutput file("$project.buildDir/reports/lint/circle_ci_example_lint.html")
  }




  buildTypes {
    release {
      minifyEnabled false //means we did not implemented proguard now.
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      resValue "string", "app_name", "CircleCIExample"

      /*   applicationVariants.all { variant ->
           variant.outputs.each { output ->
             project.ext { appName = 'Etiket' }
             def formattedDate = new Date().format('yyyy_MM_dd')
             def newName = output.outputFile.name
             newName = newName.replace("app-", "$rootProject.ext.versionCode" + "_" + "" + "$project.ext.appName" + "_")
             newName = newName.replace("_release", "_" + formattedDate)
             output.outputFile = new File(output.outputFile.parent, newName)
           }
         }*/
    }

    debug {
      applicationIdSuffix '.debug'
      resValue "string", "app_name", "CircleCIExample.test"
      testCoverageEnabled = true
    }

    prelive {
      applicationIdSuffix '.prelive'
      resValue "string", "app_name", "CircleCIExample.prelive"
    }
  }
  buildToolsVersion '26'
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
    exclude group: 'com.android.support', module: 'support-v4'

    exclude module: 'junit'
  })





  //--------

  //Dependencies for local unit tests
  testCompile "junit:junit:$rootProject.junitVersion"
  testCompile "org.hamcrest:hamcrest-all:$rootProject.hamcrestVersion"
  testCompile "org.mockito:mockito-core:$rootProject.mockitoVersion"



  // Android Testing Support Library's runner and rules
  androidTestCompile "com.android.support.test:runner:$rootProject.runnerVersion"
  androidTestCompile "com.android.support.test:rules:$rootProject.runnerVersion"
  //androidTestCompile "com.android.support.test:testing-support-lib:$rootProject.testingSupportLibVersion"

  // Dependencies for Android unit tests
  androidTestCompile "junit:junit:$rootProject.junitVersion"
  //androidTestCompile "org.mockito:mockito-core:$rootProject.mockitoVersion"
  androidTestCompile "com.google.dexmaker:dexmaker:$rootProject.dexmakerVersion"
  androidTestCompile "com.google.dexmaker:dexmaker-mockito:$rootProject.dexmakerVersion"


  // Espresso UI Testing
  androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
  //androidTestCompile "com.android.support.test.espresso:espresso-contrib:$rootProject.espressoVersion"
  androidTestCompile "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"


  //Conflict between test and apk
  androidTestCompile "com.android.support:support-annotations:$rootProject.supportVersion"
  androidTestCompile "com.android.support:support-v13:$rootProject.supportVersion"

  //------------------

  compile 'com.android.support.constraint:constraint-layout:1.0.2'
  compile 'com.android.support.test.espresso:espresso-idling-resource:2.2.2'

  compile "com.android.support:appcompat-v7:$rootProject.supportVersion"
  compile "com.android.support:support-v4:$rootProject.supportVersion"
  compile "com.android.support:appcompat-v7:$rootProject.supportAppcompatVersion"
  compile "com.android.support:recyclerview-v7:$rootProject.recyclerViewVersion"
  compile "com.android.support:design:$rootProject.supportVersion"
  compile "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"

  compile "com.google.dagger:dagger:$rootProject.daggerVersion"
  compile "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
  compile "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"
  compile "io.reactivex.rxjava2:rxjava:$rootProject.rxJavaVersion"
  compile "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"
  compile "com.jakewharton.rxbinding2:rxbinding:$rootProject.rxBinding"
  compile "com.google.code.gson:gson:$rootProject.gsonVersion"
  compile "com.jakewharton.timber:timber:$rootProject.timberVersion"
  compile "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
  compile "com.squareup.retrofit2:converter-gson:$rootProject.retrofitConverterVersion"
  compile "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rootProject.retrofitAdapterVersion"
  compile "com.squareup.okhttp3:okhttp:$rootProject.okHttpVersion"
  compile "com.squareup.okhttp3:logging-interceptor:$rootProject.okHttpInterceptorVersion"
  compile "com.android.support:support-annotations:$rootProject.androidAnnotationsVersion"
  compile "javax.inject:javax.inject:$rootProject.javaxInjectVersion"




  //Barcode reader....
  compile "com.edwardvanraak:MaterialBarcodeScanner:$rootProject.barcodeVersion"
  compile "com.android.support:cardview-v7:$rootProject.supportVersion"


  apt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
  provided "javax.annotation:jsr250-api:$rootProject.javaxAnnotationVersion"
}

